service: ${env:SERVERLESS_SERVICE_NAME}-receive

frameworkVersion: '3'
useDotenv: true

provider:
  name: aws
  runtime: python${env:PYTHON_VERSION}
  stage: ${opt:stage, self:custom.defaultStage}
  region: ap-northeast-1
  logRetentionInDays: 3
  iam:
    role:
      statements:
        - Effect: 'Allow'
          Action:
            - lambda:InvokeFunction
          Resource: "*"

plugins:
  - serverless-layers

package:
  patterns:
    - '!requirements.txt'
    - '!Dockerfile'

custom:
  defaultStage: dev
  serverless-layers:
    layersDeploymentBucket: ${env:LAYER_BUCKET_NAME}-${self:provider.stage}

functions:
  python:
    handler: receive.handler
    events:
      - http:
          method: POST
          path: /receive
    timeout: 600
    runtime: python${env:PYTHON_VERSION}
    memorySize: 1024
    environment:
      NODE_ENV: ${self:provider.stage}
      OWNER: ${env:OWNER}
      SLACK_COMMAND: ${env:SLACK_COMMAND}
      SLACK_ACCESS_TOKEN: ${env:SLACK_ACCESS_TOKEN}
      CHANNEL_ID: ${env:CHANNEL_ID}