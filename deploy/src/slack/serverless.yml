service: ${env:SERVERLESS_SERVICE_NAME}-slack

frameworkVersion: '3'
useDotenv: true

provider:
  name: aws
  runtime: python${env:PYTHON_VERSION}
  stage: ${opt:stage, self:custom.defaultStage}
  region: ap-northeast-1
  logRetentionInDays: 3

plugins:
   - serverless-layers

package:
  patterns:
    - '!requirements.txt'
    - '!Dockerfile'

custom:
  defaultStage: dev
  serverless-layers:
    layersDeploymentBucket: ${env:LAYER_BUCKET_NAME}-${self:provider.stage}

functions:
  python:
    handler: slack.handler
    timeout: 600
    runtime: python${env:PYTHON_VERSION}
    environment:
      NODE_ENV: ${self:provider.stage}
      OWNER: ${env.OWNER}
      SLACK_ACCESS_TOKEN: ${env:SLACK_ACCESS_TOKEN}
      CHANNEL_ID: ${env:CHANNEL_ID}
      BUCKET_NAME: ${env:BUCKET_NAME}-${self:provider.stage}
      LOG_LOCATION: ${env:LOG_LOCATION}
      ZIP_FILE_NAME: ${env:ZIP_FILE_NAME}
    events:
      - s3:
          bucket: ${env:BUCKET_NAME}-${self:provider.stage}
          event: s3:ObjectCreated:*
          rules:
            - prefix: ${env:S3_PREFIX}
            - suffix: ${env:S3_SUFFIX}
          existing: true
