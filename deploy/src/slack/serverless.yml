service: new-imageautomation-slack

frameworkVersion: '3'
useDotenv: true

provider:
  name: aws
  runtime: python3.8
  stage: ${opt:stage, self:custom.defaultStage}
  region: ap-northeast-1
  logRetentionInDays: 3

plugins:
   - serverless-layers

package:
  patterns:
    - '!requirements.txt'
    - '!Dockerfile'

custom:
  defaultStage: dev
  serverless-layers:
    layersDeploymentBucket: new-imageautomation-layers-${self:provider.stage}

functions:
  python:
    handler: slack.handler
    timeout: 600
    runtime: python3.8
    environment:
      NODE_ENV: ${self:provider.stage}
      OWNER: ${env.OWNER}
      SLACK_ACCESS_TOKEN: ${env:SLACK_ACCESS_TOKEN}
      CHANNEL_ID: ${env:CHANNEL_ID}
      BUCKET_NAME: ${env:BUCKET_NAME}-${self:provider.stage}
      LOG_LOCATION: ${env:LOG_LOCATION}
      ZIP_FILE_NAME: ${env:ZIP_FILE_NAME}
    events:
      - s3:
          bucket: new-imageautomation-store-${self:provider.stage}
          event: s3:ObjectCreated:*
          rules:
            - prefix: tmp-images_
            - suffix: i.i.image.zip
          existing: true
